import tkinter as tk
from tkinter import ttk, simpledialog
import mysql.connector
from mysql.connector import Error
import speech_recognition as sr
import pyttsx3

def listen():
    recognizer = sr.Recognizer()
    microphone = sr.Microphone()

    with microphone as source:
        print("Please speak...")
        recognizer.adjust_for_ambient_noise(source)
        audio = recognizer.listen(source, timeout=5, phrase_time_limit=10)

    try:
        text = recognizer.recognize_google(audio)
        print("You said:", text)
        return text.lower()
    except sr.UnknownValueError:
        print("Could not understand audio.")
        return None
    except sr.RequestError as e:
        print(f"Could not request results from Google Speech Recognition service; {e}")
        return None

def get_symptoms():
    # Use a text box to get symptoms input if unable to speak
    symptoms = simpledialog.askstring("Symptoms", "Enter your symptoms:")
    return symptoms.lower() if symptoms else None

def analyze_symptoms(symptoms, cursor):
    # Simulate symptom analysis for demonstration purposes
    # Replace this with your actual analysis logic
    if symptoms:
        # Replace this with your actual symptom analysis logic
        try:
            cursor.execute(f"SELECT * FROM doctors WHERE specialty = '{symptoms}'")
            result = cursor.fetchone()
            if result:
                doctor_name, _, _, phone_num = result
                diagnosis = f" by Dr. {doctor_name}"
                prescription = "Get plenty of rest and drink fluids."
            else:
                diagnosis = "No matching doctor found for the given symptoms."
                prescription = ""
        except Error as e:
            print(f"Error: {e}")
            diagnosis = "Error occurred while fetching doctor information."
            prescription = ""
        return diagnosis, prescription
    else:
        # Return a default value when symptoms are not provided
        return "Unable to analyze symptoms", ""

def connect_to_doctor():
    # Simulate connecting to a doctor for demonstration purposes
    return "Doctor connected successfully."

def speak(text):
    engine = pyttsx3.init()
    engine.say(text)
    engine.runAndWait()

def main():
    try:
        # Connect to the MySQL database
        connection = mysql.connector.connect(
            host="127.0.0.1",
            user="root",
            password="@Azeez04",
            database="hospital_db"
        )
        if connection.is_connected():
            print("Connected to MySQL database")
            cursor = connection.cursor()
        else:
            print("Failed to connect to MySQL database")
            return

        speak("Hello! I am Jarvis, your virtual assistant. How can I help you today?")
        
        # Ask the user to choose the input method
        input_method = simpledialog.askstring("Input Method", "Enter 's' for speech or 't' for text:")

        if input_method and input_method.lower() == 's':
            speak("Please describe your symptoms.")
            symptoms = listen()
        else:
            symptoms = get_symptoms()

        if symptoms:
            speak(f"You mentioned that you are experiencing {symptoms}.")

            diagnosis, prescription = analyze_symptoms(symptoms, cursor)

            speak(f" Your symptoms will be analyzed{diagnosis}")
            speak(f" Here is a suggestion: {prescription}")

            speak(" Now, I will connect you to a doctor for further assistance.")
            connection_status = connect_to_doctor()

            speak(connection_status)
            speak(" The doctor will be with you shortly. Take care!")

        else:
            speak("I'm sorry, but I couldn't understand your symptoms. Please try again.")

    except Error as e:
        print(f"Error: {e}")

    finally:
        # Close the database connection
        if connection.is_connected():
            cursor.close()
            connection.close()
            print("MySQL connection closed")

def display_doctors():
    try:
        connection = mysql.connector.connect(
            host="127.0.0.1",
            user="root",
            password="@Azeez04",
            database="hospital_db"
        )
        if connection.is_connected():
            print("Connected to MySQL database")
            cursor = connection.cursor()

            # Fetch doctors from the database
            cursor.execute("SELECT * FROM doctors")
            doctors = cursor.fetchall()

            # Create a Tkinter window to display doctors
            root = tk.Tk()
            root.title("Doctors List")

            # Create a treeview to display doctors
            tree = ttk.Treeview(root, columns=("Name", "Specialty", "Phone Number"))
            tree.heading("#0", text="Doctor ID")
            tree.heading("Name", text="Name")
            tree.heading("Specialty", text="Specialty")
            tree.heading("Phone Number", text="Phone Number")

            for doctor in doctors:
                tree.insert("", "end", values=doctor)

            tree.pack(expand=True, fill=tk.BOTH)

            root.mainloop()

        else:
            print("Failed to connect to MySQL database")

    except Error as e:
        print(f"Error: {e}")

    finally:
        # Close the database connection
        if connection.is_connected():
            cursor.close()
            connection.close()
            print("MySQL connection closed")

if __name__ == "__main__":
    main()
